plugins {
    id("java-library")
}

version = "0.1"
group = "com.micronauttodo"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    api(project(":services"))

    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"

    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-server")

    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")

    testImplementation("org.mockito:mockito-core")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("io.micronaut:micronaut-http-client")

    testImplementation("com.github.ksuid:ksuid:1.1.1")

    testAnnotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation("io.micronaut:micronaut-http-server-netty")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:testcontainers")
    testRuntimeOnly("ch.qos.logback:logback-classic")

    testImplementation(project(":dynamodb"))
}


task copyOpenApi(type: Copy) {
    from 'build/classes/java/main/META-INF/swagger/micronaut-todo-1.0.yml'
    into '../openapi'
    mustRunAfter('classes')
}
tasks.named('jar') {
    it.dependsOn('copyOpenApi')
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.named("test") {
    useJUnitPlatform()
}